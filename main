#!/bin/bash

#PBS -l nodes=1:ppn=8,walltime=00:10:00
#PBS -l vmem=31gb
#PBS -N tractseg
#PBS -V

#needed for bridges
#SBATCH -p GPU-shared
#SBATCH --gres=gpu:p100:2

set -e
set -x

num_epochs=`jq -r '.num_epochs' config.json`

if [ -d 'dataset/' ]; then 
	rm -r dataset
fi

if [ ! $num_epochs == null ]; then
	echo "STARTING TRAINING..."
	
	if [ -d 'output/' ]; then 
 		rm -r output
	fi

	singularity exec -e --nv docker://paoloavesani/docker-test bash -c \
	            "brainlife-utils/create_training_dataset.py && \
                    bin/peaks_to_cnn -json brainlife-utils/brainlife_config_training.json"
                    
	if [ -d 'final_output/' ]; then 
 		rm -r final_output
	fi
	
	if [ -d 'weights/' ]; then 
 		rm -r weights
	fi

	mv output final_output
	mkdir -p weights
	mv final_output/*.npz weights/weights.npz
 	mv final_output/Hyperparameters.txt weights/Hyperparameters.txt
	mkdir -p images
	mv final_output/*.png images/.
	cat <<EOF > images/images.json 
{
   "images": [
       {
           "filename": "images/metrics_all.png",
           "name": "Training Metrics - All",
           "desc": "f1 and loss for train, validation and test sets."
       },
       {
           "filename": "images/metrics.png",
           "name": "Training Metrics",
           "desc": "f1 and loss for train, validation and test sets."
       }
}
EOF
	
	echo "{\"weight\": $(cat brainlife-utils/brainlife_config_training.json) }" > product.json
	
	if [ -f weights/*.npz ]; then 
		echo "Training completed."
	else 
		echo "Weights missing."
		exit 1
	fi
  
else
	echo "STARTING TEST..."

	if [ -d 'test_output/' ]; then 
 		rm -r test_output
	fi

	singularity exec -e --nv docker://paoloavesani/docker-test bash -c \
	            "brainlife-utils/create_test_dataset.py && \
  	            bin/peaks_to_cnn -json brainlife-utils/brainlife_config_test.json && \
  	            brainlife-utils/adjust_test_output.py"

  	if [ -d 'tractseg_output/' ]; then 
 		rm -r tractseg_output
	fi
	mkdir -p tractseg_output
  	mv test_output tractseg_output
   	
	if [ -z "$(ls -A -- "tractseg_output")" ]; then    
		echo "tractseg_output is empty."; 
		exit 1;
	else    
		echo "test done." 
	fi
fi   

