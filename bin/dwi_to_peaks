#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright 2017 Division of Medical Image Computing, German Cancer Research Center (DKFZ)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse
from tractseg.libs import mrtrix

def main():
    parser = argparse.ArgumentParser(description="Generate peaks image.",
                                        epilog="Written by Jakob Wasserthal. Please reference 'Wasserthal et al. "
                                               "TractSeg - Fast and accurate white matter tract segmentation. "
                                               "https://doi.org/10.1016/j.neuroimage.2018.07.070)'")
    parser.add_argument("-i", metavar="file_in", dest="file_in", help="input file (4D nifti diffusion image)",
                        required=True)
    parser.add_argument("-o", metavar="file_out", dest="file_out", help="output peaks file, default: \'peaks.nii.gz\'", default='peaks.nii.gz')
    parser.add_argument("--bvals", metavar="bvals", dest="bvals", help="bvals file", required=True)
    parser.add_argument("--bvecs", metavar="bvecs", dest="bvecs", help="bvecs file", required=True)
    parser.add_argument("--brain_mask", metavar="brain_mask", dest="brain_mask", help="brain mask", required=True)
    parser.add_argument("--csd_type", metavar="csd_type", dest="csd_type", choices=['csd_msmt_5tt','csd_msmt','csd'],
                help="type of csd, choices: csd_msmt_5tt | csd_msmt | csd\ndefault: \'csd\', suggested: \'csd_msmt_5tt\'; description: ms = multi-shell, mt = multi-tissue, 5tt = 5-tissue-type", default='csd')

    args = parser.parse_args()


    # compute peaks
    mrtrix.create_fods(args.file_in, args.file_out, args.bvals, args.bvecs,
                         args.brain_mask, args.csd_type, nr_cpus='-1')

if __name__ == '__main__':
    main()
